# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        python-version: ["3.7", "3.8"]

    steps:
    - uses: actions/checkout@v2
    - name: install machine dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip "setuptools<58" wheel
        pip install .[test]
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 mavis --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Lint with black
      run: |
        pip install black
        # stop the build if black needs to be run
        black mavis -S -l 100 --check
    - name: install bwa
      run: |
        git clone https://github.com/lh3/bwa.git
        cd bwa
        git checkout v0.7.17
        make
        cd ..
    - name: install blat
      run: |
        wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/blat/blat
        chmod a+x blat
    - name: run short tests with pytest
      run: |
        export PATH=$PATH:$(pwd):$(pwd)/bwa
        pytest tests -v --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov mavis --cov-report term --cov-report xml --durations=10
      env:
        RUN_FULL: 0
      if: github.event_name != 'pull_request'
    - name: run full tests with pytest
      run: |
        export PATH=$PATH:$(pwd):$(pwd)/bwa
        pytest tests -v --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov mavis --cov-report term --cov-report xml --durations=10
      env:
        RUN_FULL: 1
      if: github.event_name == 'pull_request'
    - name: Upload pytest test results
      uses: actions/upload-artifact@master
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
      if: always()
    - name: Update code coverage report to CodeCov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
      if: matrix.python-version == 3.8
